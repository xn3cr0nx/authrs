version: "3.8"

x-network: &network
  networks:
    - authrs

services:
  collector:
    image: otel/opentelemetry-collector
    container_name: collector
    ports:
      - 4317:4317
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ${PWD}/config/otel/otel-collector.yaml:/etc/otel-collector-config.yaml
    <<: *network

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-search.enabled=true", "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ${PWD}/config/tempo/tempo.yaml:/etc/tempo.yaml
      - ${PWD}/config/tempo/overrides.yaml:/etc/overrides.yaml
      - ${PWD}/tempo-data:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "55680:55680"  # otlp grpc
      # - "4317:4317"  # otlp grpc - commented to be not exported and overlapping with collector
      - "55681:55681"  # otlp http
      - "9411:9411"   # zipkin
    <<: *network

  tempo-query:
    image: grafana/tempo-query:latest
    container_name: tempo-query
    command: [ "--grpc-storage-plugin.configuration-file=/etc/tempo-query.yaml" ]
    volumes:
      - ./config/tempo/tempo-query.yaml:/etc/tempo-query.yaml
    ports:
      - "16686:16686"  # jaeger-ui
    depends_on:
      - tempo
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - prometheus_data:/prometheus
      - prometheus_config:/fragments/
      - ${PWD}/config/prometheus/targets/prometheus.json:/etc/prometheus/targets/prometheus.json
      - ${PWD}/config/prometheus/targets/grafana.json:/etc/prometheus/targets/grafana.json
      # - ${PWD}/config/prometheus/targets/postgres.json:/etc/prometheus/targets/postgres.json
    command:
      - "--config.file=/fragments/complete/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    depends_on:
      - config-concat
    <<: *network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "4000:3000"
    volumes:
      - grafana_lib:/var/lib/grafana
      - ${PWD}/config/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ${PWD}/config/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      # - GF_SECURITY_ADMIN_PASSWORD=secret
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    <<: *network

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    <<: *network

  config-concat:
    image: deanwilson/promconf-concat:0.1.0
    container_name: config-concat
    restart: always
    volumes:
      - prometheus_config:/fragments/
      - ${PWD}/config/prometheus/base_prometheus.yml:/base_prometheus.yml

volumes:
  grafana_lib:
  prometheus_data:
  prometheus_config:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  authrs:
